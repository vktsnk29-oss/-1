from __future__ import annotations

from urllib.parse import quote

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, ContextTypes, CommandHandler, CallbackQueryHandler

from .config import load_settings

settings = load_settings()


def build_tonconnect_pay_kb(amount_ton: float, memo: str = "") -> InlineKeyboardMarkup:
    base = str(settings.base_url).rstrip("/")
    # –î–æ–±–∞–≤–ª—è–µ–º &to=..., —á—Ç–æ–±—ã —è–≤–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –∞–¥—Ä–µ—Å –ø–æ–ª—É—á–∞—Ç–µ–ª—è
    pay_url = f"{base}/pay?amount={amount_ton}&memo={quote(memo)}&to={settings.ton_address}"
    return InlineKeyboardMarkup(
        [[InlineKeyboardButton(f"–û–ø–ª–∞—Ç–∏—Ç—å {amount_ton} TON (TON Connect)", url=pay_url)]]
    )


async def cmd_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –ü—Ä–æ—Å—Ç–µ–π—à–∏–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —Ö–µ–Ω–¥–ª–µ—Ä —Å –∫–Ω–æ–ø–∫–æ–π –æ–ø–ª–∞—Ç—ã.
    –ü–æ–¥—Å—Ç–∞–≤—å —Å–≤–æ—é –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É —Ä–∞—Å—á—ë—Ç–∞ —Å—É–º–º—ã/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
    """
    amount_ton = 2.5
    memo = "demo-order-123"
    kb = build_tonconnect_pay_kb(amount_ton, memo)
    text = (
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –¥–µ–º–æ.\n\n"
        f"–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: <b>{amount_ton} TON</b>\n"
        f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: <code>{memo}</code>\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ TON Connect."
    )
    await update.effective_chat.send_message(text, reply_markup=kb, parse_mode="HTML")


# –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ callback-–∫–Ω–æ–ø–∫–∏ ‚Äî –¥–æ–±–∞–≤—å —Å—é–¥–∞ –Ω—É–∂–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏.
# –û—Å—Ç–∞–≤–∏–º –ø—Ä–∏–º–µ—Ä –¥–ª—è –±—É–¥—É—â–∏—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π:
async def on_cb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    await q.answer("–û–∫–µ–π!")


def register(app: Application):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã –≤ PTB Application.
    –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å —Å–≤–æ–∏ ‚Äî –¥–æ–±–∞–≤–ª—è–π –∏—Ö —Ç—É—Ç.
    """
    app.add_handler(CommandHandler("start", cmd_start))
    app.add_handler(CallbackQueryHandler(on_cb))
